@model IEnumerable<Sovitushuone.Models.Vaatteet>
    
    @{
        ViewData["Title"] = "Index";
    }

    <head>


        <style>
            .frame {
                width: 700px;
                height: 500px;
                border: 3px solid #ccc;
                background: #eee;
                margin: auto;
                padding: 15px 10px;
            }

            img {
                width: 100%;
                height: 100%;
            }
        </style>
    </head>
    <h1>Vaatteet</h1>

    <body>
        <script src="js/three.js"></script>
        <script src="~/js/OBJLoader.js"></script>
        <script src="~/js/OrbitControls.js"></script>
      

        <script>
            const scene = new THREE.Scene();
            const renderer = new THREE.WebGLRenderer({ alpha: true });


            scene.background = new THREE.Color(0xB1B1B1);
            const camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 1, 5000);
            camera.rotation.y = 45 / 180 * Math.PI;
            camera.position.x = 800;
            camera.position.y = 100;
            camera.position.z = 1000;

            const light = new THREE.AmbientLight(0xB1B1B1, 100);
            scene.add(light);
            const directionallight = new THREE.DirectionalLight(0xffffff, 50)
            directionallight.position.set(0, 1, 0);
            directionallight.castShadow = true;
            scene.add(directionallight);
            /*
            const light1 = new THREE.PointLight(0xc4c4c4, 10)
            light1.position.set(0, 300, 500);
            scene.add(light1);

            const light2 = new THREE.PointLight(0xc4c4c4, 10)
            light2.position.set(500, 100, 0);
            scene.add(light2);

            const light3 = new THREE.PointLight(0xc4c4c4, 10)
            light3.position.set(0, 100, -500);
            scene.add(light3);

            const light4 = new THREE.PointLight(0xc4c4c4, 10)
            light4.position.set(-500, 300, 0);
            scene.add(light4);
            */


            renderer.setSize(window.innerWidth, window.innerHeight);
            document.body.appendChild(renderer.domElement);
            const renderingParent = new THREE.Group();
            const controls = new THREE.OrbitControls(camera, renderer.domElement);
            const material = new THREE.MeshPhongMaterial({
                color: 0x552811,
                specular: 0x222222,
                shininess: 25,
              
            });
           


            const loader = new THREE.OBJLoader();
            
            // load a resource
            loader.load(
                // resource URL
                'objects/naisavatar.obj',
                // called when resource is loaded
                function (object) {

                    object.traverse(function (child) {

                        if (child instanceof THREE.Mesh) {

                            child.material.map = material;

                        }

                    });

                    renderingParent.scale.set(0.3, 0.3, 0.3);
                    renderingParent.add(object);

                    scene.add(renderingParent);
                    

                    function animate() {
                        requestAnimationFrame(animate);

                        renderer.render(scene, camera);
                    }

                    animate();
                },
                // called when loading is in progresses
                function (xhr) {

                    console.log((xhr.loaded / xhr.total * 100) + '% loaded');

                },
                // called when loading has errors
                function (error) {

                    console.log('An error happened');

                }
            );




        </script>


    </body>